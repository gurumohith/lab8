from dftfun import dft
import matplotlib.pyplot as plt
import numpy as np
z=int(input("enter number of samples for x1[n]:"))
N=int(input("enter order of dft:"))
x1=[]
print("enter samples for x1[n]:")
for i in range(0,z):
	x=int(input())
	x1=np.append(x1,x)
print("x1[n]=",x1)
X1=dft(x1,N)
print("X1[N]=",X1)
plt.subplot(421)
plt.stem(np.abs(X1))
plt.title("manitude spectrum of X1[n]")
plt.grid()
plt.subplot(422)
plt.stem(np.angle(X1)/np.pi)
plt.title("phase spectrum X1[n]")
plt.grid()
r=int(input("enter number of samples for x2[n]:"))
x2=[]
print("enter samples for x2[n]:")
for i in range(0,r):
	y=int(input())
	x2=np.append(x2,y)
print("x2[n]=",x2)
X2=dft(x2,N)
print("X2[N]=",X2)
plt.subplot(423)
plt.stem(np.abs(X2))
plt.title("magnitude spectrum of X2[N]")
plt.grid()
plt.subplot(424)
plt.stem(np.angle(X2)/np.pi)
plt.title("phase spectrum of X2[N]")
plt.grid()
z3=x1+x2
print("x3[n]=x1[n]+x2[n]=",z3)
x3=dft(z3,N)
print("dft(x1+x2)=",x3)
plt.subplot(425)
plt.stem(np.abs(x3))
plt.title("magnitude spectrum of x3[n]")
plt.grid()
plt.subplot(426)
plt.stem(np.angle(x3)/np.pi)
plt.title("phase spectrum of x3[n]")
plt.grid()
X3=dft(x1,N)+dft(x2,N)
print("X3[n]=X1[n]+X2[n]=",X3)
plt.subplot(427)
plt.stem(np.abs(X3))
plt.title("magnitude spectrum of X3[N]")
plt.xlabel("freq(w/pi)")
plt.ylabel("magnitude")
plt.grid()
plt.subplot(428)
plt.stem(np.angle(X3)/np.pi)
plt.xlabel("freq(w/pi)")
plt.ylabel("phase angle in radian")
plt.title("phase spectrum of X3[N]")
plt.grid()
plt.show()
